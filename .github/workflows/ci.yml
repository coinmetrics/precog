name: CI

on:
  pull_request:
  push:
    branches: [master, staging, dev]

jobs:
  #----------------------------------------------
  #                Build Environment
  #----------------------------------------------
  build:
    name: Build
    uses: ./.github/workflows/build.yml
    with:
      name: Cache
      command: |
        poetry run python -m pip list
        poetry run python --version
        poetry --version
        poetry run echo "Build successful"

  #----------------------------------------------
  #                 Run Linters
  #----------------------------------------------
  lint-black:
    name: Linter
    needs: build
    uses: ./.github/workflows/build.yml
    with:
      name: Black
      command: poetry run python -m black --check .
  lint-isort:
    name: Linter
    needs: build
    uses: ./.github/workflows/build.yml
    with:
      name: Isort
      command: |
        echo "=== Checking each file individually ==="
        EXIT_CODE=0
        for file in $(poetry run python -m isort --show-files .); do
          echo "Checking $file..."
          if ! poetry run python -m isort --check-only --diff "$file"; then
            echo "❌ FAILED: $file"
            EXIT_CODE=1
          else
            echo "✅ PASSED: $file"
          fi
        done
        exit $EXIT_CODE
  lint-mypy:
    name: Linter
    needs: build
    if: false  # This condition ensures the job is never executed
    uses: ./.github/workflows/build.yml
    with:
      name: Mypy
      command: poetry run python -m mypy --verbose 0 .
  lint-flake8:
    name: Linter
    needs: build
    uses: ./.github/workflows/build.yml
    with:
      name: Flake8
      command: poetry run python -m flake8 .

  #----------------------------------------------
  #                 Run Tests
  #----------------------------------------------
  test-unittest:
    name: Tests
    needs: [
      lint-black,
      lint-isort,
      lint-mypy,
      lint-flake8,
    ]
    if: ${{ always() }} # will run the tests regardless of linting success
    uses: ./.github/workflows/build.yml
    with:
      name: Unittests
      command: poetry run pytest tests/
